version: "3.9"
services:
  postgres:
    image: postgres:15
    container_name: postgres_local
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: seligo
      POSTGRES_PASSWORD: 02d10b4dc320e24299b240f1d2dd629e
      POSTGRES_DB: prueba_tecnica
    volumes:
      - pgdata:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_local
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: forecast-backend
    working_dir: /app/backend
    command: npm run start:prod
    environment:
      DATABASE_URL: postgresql://seligo:02d10b4dc320e24299b240f1d2dd629e@localhost:5432/prueba_tecnica
      JWT_SECRET: 9c536598de2e99025cef6aa3db605fcf
      REFRESH_SECRET: 99a16a276f22c79f57e360132cd0ddea
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-build
    container_name: forecast-frontend
    working_dir: /app/frontend
    command: npm run preview -- --port 5173
    ports:
      - "5173:5173"
    depends_on:
      - backend


volumes:
  pgdata:
  pgadmin_data:
